{"version":3,"sources":["components/UI/Card.js","components/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onPickedFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","enteredFilter","setEnteredFilter","console","log","filteredExpenses","filter","toString","selectYear","ExpenseForm","textInInput","setTextInInput","textInAmountInput","setTextInAmountInput","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","isNaN","alert","expenseData","Date","onSaveExpenseData","type","placeholder","onClick","min","step","onCancel","NewExpense","isEditing","setIsEditing","titleAdd","fetch","method","body","JSON","stringify","headers","response","json","data","onForm","enteredExpenseData","addExpenseshandler","random","App","setExpenses","fetchMoviesHandler","useCallback","key","loadedExpenses","push","useEffect","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wbAOeA,EALF,SAACC,GACZ,IAAMC,EAAU,QAAUD,EAAME,UAChC,OAAO,qBAAKA,UAAWD,EAAQ,SAAED,EAAMG,UACzC,ECkBeC,G,MApBQ,SAACJ,GAKtB,OACE,qBAAKE,UAAU,kBAAiB,SAC9B,sBAAKA,UAAU,2BAA0B,UACvC,gDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SART,SAACC,GAC3BR,EAAMS,eAAeD,EAAME,OAAOL,MACpC,EAMmE,UAC3D,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,yBAK9B,GCLeM,G,MAdK,SAACX,GACnB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMf,EAAMa,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOhB,EAAMa,KAAKI,cAExB,OACE,sBAAKf,UAAU,eAAc,UAC3B,qBAAKA,UAAU,uBAAsB,SAAEU,IACvC,qBAAKV,UAAU,sBAAqB,SAAEc,IACtC,qBAAKd,UAAU,qBAAoB,SAAEa,MAG3C,GCGeG,G,MAZK,SAAClB,GACnB,OACE,eAAC,EAAI,CAACE,UAAU,eAAc,UAC5B,cAAC,EAAW,CAACW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAA2B,UACxC,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAqB,UAAEF,EAAMoB,OAAM,YAI1D,GCOeC,G,MAlBM,SAACrB,GACpB,OAA2B,IAAvBA,EAAMsB,MAAMC,OACP,oBAAIrB,UAAU,0BAAyB,+BAG9C,oBAAIA,UAAU,gBAAe,SAC1BF,EAAMsB,MAAME,KAAI,SAACC,GAAO,OACvB,cAAC,EAAW,CAEVN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,GAIb,KAIV,G,gBCGeC,G,MApBE,SAAC3B,GAChB,IAAI4B,EAAgB,KAMpB,OAJI5B,EAAM6B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO/B,EAAMK,MAAQL,EAAM6B,SAAY,KAAO,KAInE,sBAAK3B,UAAU,YAAW,UACxB,qBAAKA,UAAU,mBAAkB,SAC/B,qBACEA,UAAU,kBACV8B,MAAO,CAAEC,OAAQL,OAGrB,qBAAK1B,UAAU,mBAAkB,SAAEF,EAAMkC,UAG/C,GCCeC,G,MAlBD,SAACnC,GACb,IAAMoC,EAAmBpC,EAAMqC,WAAWb,KAAK,SAAAc,GAAS,OAAIA,EAAUjC,KAAK,IACrEkC,EAAeT,KAAKU,IAAG,MAARV,KAAI,YAAQM,IAEjC,OACE,qBAAKlC,UAAU,QAAO,SACnBF,EAAMqC,WAAWb,KAAI,SAACc,GAAS,OAC9B,cAAC,EAAQ,CAEPjC,MAAOiC,EAAUjC,MACjBwB,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,MAIf,KAIV,GCOeO,EAxBO,SAACzC,GACrB,IAeoC,EAf9B0C,EAAkB,CACtB,CAAER,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,IACvB,cAEoBL,EAAM2C,UAAQ,IAApC,2BAAsC,CAAC,IAA5BlB,EAAO,QAEhBiB,EADqBjB,EAAQZ,KAAK+B,YACJvC,OAASoB,EAAQL,MACjD,CAAC,+BAED,OAAO,cAAC,EAAK,CAACiB,WAAYK,GAC5B,ECQeG,G,MA1BE,SAAC7C,GAChB,MAA0C8C,mBAAS,QAAO,mBAAnDC,EAAa,KAAEC,EAAgB,KAKtCC,QAAQC,IAAIH,GAEZ,IAAMI,EAAmBnD,EAAMsB,MAAM8B,QAAO,SAAC3B,GAC3C,OAAOA,EAAQZ,KAAKI,cAAcoC,aAAeN,CACnD,IAEA,OACE,6BACE,eAAC,EAAI,CAAC7C,UAAU,WAAU,UACxB,cAAC,EAAc,CACbI,SAAUyC,EACVtC,eAdsB,SAAC6C,GAC7BN,EAAiBM,EACnB,IAcM,cAAC,EAAa,CAACX,SAAUQ,IACzB,cAAC,EAAY,CAAC7B,MAAO6B,QAI7B,G,OC6EeI,G,YAzGK,SAACvD,GACnB,MAAsC8C,mBAAS,uBAAsB,mBAA9DU,EAAW,KAAEC,EAAc,KAClC,EAAkDX,mBAChD,yBACD,mBAFMY,EAAiB,KAAEC,EAAoB,KAG9C,EAAwCb,mBAAS,IAAG,mBAA7Cc,EAAY,KAAEC,EAAe,KACpC,EAA0Cf,mBAAS,IAAG,mBAA/CgB,EAAa,KAAEC,EAAgB,KACtC,EAAsCjB,mBAAS,IAAG,mBAA3CkB,EAAW,KAAEC,EAAc,KAoDlC,OACE,uBAAMC,SA7Bc,SAAC1D,GAGrB,GAFAA,EAAM2D,iBAEFC,OAAON,GACT,OAAOO,MAAM,8BAEf,IAAKT,EACH,OAAOS,MAAM,kCAEf,IAAKP,EACH,OAAOO,MAAM,kCAEf,IAAKL,EACH,OAAOK,MAAM,gCAGf,IAAMC,EAAc,CAClBnD,MAAOyC,EACPxC,QAAS0C,EACTjD,KAAM,IAAI0D,KAAKP,IAEjBhE,EAAMwE,kBAAkBF,GAExBT,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,GACjB,EAGgC,UAC5B,sBAAK/D,UAAU,wBAAuB,UACpC,sBAAKA,UAAU,uBAAsB,UACnC,0CACA,uBACEuE,KAAK,OACLpE,MAAOuD,EACPc,YAAalB,EACbjD,SA3DiB,SAACC,GAC1BqD,EAAgBrD,EAAME,OAAOL,MAC/B,EA0DUsE,QAnDiB,WACzBlB,EAAe,IACK,KAAhBD,GACFC,EAAe,uBAEnB,OAiDM,sBAAKvD,UAAU,uBAAsB,UACnC,2CACA,uBACEuE,KAAK,OACLpE,MAAOyD,EACPY,YAAahB,EACbiB,QAtDuB,WAC/BhB,EAAqB,IACK,KAAtBD,GACFC,EAAqB,yBAEzB,EAkDUpD,SAnEkB,SAACC,GAC3BuD,EAAiBvD,EAAME,OAAOL,MAChC,EAkEUuE,IAAI,OACJC,KAAK,YAGT,sBAAK3E,UAAU,uBAAsB,UACnC,yCACA,uBACEuE,KAAK,OACLG,IAAI,aACJpC,IAAI,aACJnC,MAAO2D,EACPzD,SA5EgB,SAACC,GACzByD,EAAezD,EAAME,OAAOL,MAC9B,UA8EI,sBAAKH,UAAU,uBAAsB,UACnC,wBAAQuE,KAAK,SAASE,QAAS3E,EAAM8E,SAAS,oBAG9C,wBAAQL,KAAK,SAAQ,8BAI7B,GCnDeM,EAnDI,SAAC/E,GAClB,MAAkC8C,oBAAS,GAAM,mBAA1CkC,EAAS,KAAEC,EAAY,KAEG,aAchC,OAdgC,kCAAjC,WAAkCC,GAAQ,mGACjBC,MACrB,yEACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAGpB,KAAD,EATa,OAARC,EAAQ,gBAUKA,EAASC,OAAO,KAAD,EAA5BC,EAAI,OACV1C,QAAQC,IAAIyC,GACZ3F,EAAM4F,SAAS,4CAChB,sBAmBD,OACE,sBAAK1F,UAAU,cAAa,WACxB8E,GACA,wBAAQL,QAXc,WAC1BM,GAAa,EACf,EAS2C,6BAEtCD,GACC,cAAC,EAAW,CACVR,kBAxBuB,SAACqB,IAlBkB,SAEhB,GAAD,wBAqB/BC,CAJiB,2BACZD,GAAkB,IACrBnE,GAAII,KAAKiE,SAAS1C,cAGpB4B,GAAa,EACf,EAkBQH,SAZmB,WACzBG,GAAa,EACf,MAeF,ECbee,EApCH,WACV,MAAgClD,mBAAS,IAAG,mBAArCH,EAAQ,KAAEsD,EAAW,KAEtBC,EAAqBC,sBAAW,gCAAC,oHACdhB,MACrB,0EACA,KAAD,EAFa,OAARM,EAAQ,gBAIKA,EAASC,OAAO,KAAD,EAIlC,IAAWU,KAJLT,EAAI,OAEJU,EAAiB,GAELV,EAChBU,EAAeC,KAAK,CAClB5E,GAAI0E,EACJjF,MAAOwE,EAAKS,GAAKjF,MACjBC,OAAQuE,EAAKS,GAAKhF,OAClBP,KAAM,IAAI0D,KAAKoB,EAAKS,GAAKvF,QAI7BoF,EAAYI,GAAgB,2CAC3B,IAMH,OAJAE,qBAAU,WACRL,GACF,GAAG,CAACA,IAGF,gCACE,cAAC,EAAU,CAACN,OAAQM,IACpB,cAAC,EAAQ,CAAC5E,MAAOqB,MAGvB,ECjCa6D,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAG,I","file":"static/js/main.e6517586.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filterChangeHandler = (event) => {\r\n    props.onPickedFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Wybierz rok</label>\r\n        <select value={props.selected} onChange={filterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\".expense-date__month\">{month}</div>\r\n      <div className=\".expense-date__year\">{year}</div>\r\n      <div className=\".expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport React from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}$</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint => dataPoint.value));\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => january => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [enteredFilter, setEnteredFilter] = useState(\"2020\");\r\n\r\n  const onPickedFilterHandler = (selectYear) => {\r\n    setEnteredFilter(selectYear);\r\n  };\r\n  console.log(enteredFilter);\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === enteredFilter;\r\n  });\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={enteredFilter}\r\n          onPickedFilter={onPickedFilterHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [textInInput, setTextInInput] = useState(\"Please pass a title\");\r\n  const [textInAmountInput, setTextInAmountInput] = useState(\r\n    \"Please pass an amount\"\r\n  );\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const placeHolderHandler = () => {\r\n    setTextInInput(\"\");\r\n    if (textInInput === \"\") {\r\n      setTextInInput(\"Pass a title here...\");\r\n    }\r\n  };\r\n  const placeHolderAmountHandler = () => {\r\n    setTextInAmountInput(\"\");\r\n    if (textInAmountInput === \"\") {\r\n      setTextInAmountInput(\"Pass an amount here...\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isNaN(+enteredAmount)) {\r\n      return alert(\"Amount has to be a number!\");\r\n    }\r\n    if (!enteredTitle) {\r\n      return alert(\"Don't leave title input empty!\");\r\n    }\r\n    if (!enteredAmount) {\r\n      return alert(\"Dont leave amount input empty!\");\r\n    }\r\n    if (!enteredDate) {\r\n      return alert(\"Dont leave date input empty!\");\r\n    }\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            placeholder={textInInput}\r\n            onChange={titleChangeHandler}\r\n            onClick={placeHolderHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredAmount}\r\n            placeholder={textInAmountInput}\r\n            onClick={placeHolderAmountHandler}\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  async function addExpenseshandler(titleAdd) {\r\n    const response = await fetch(\r\n      \"https://react-expenses-7543b-default-rtdb.firebaseio.com/expenses.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(titleAdd),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n    props.onForm();\r\n  }\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    addExpenseshandler(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    const response = await fetch(\n      \"https://react-expenses-7543b-default-rtdb.firebaseio.com/expenses.json\"\n    );\n\n    const data = await response.json();\n\n    const loadedExpenses = [];\n\n    for (const key in data) {\n      loadedExpenses.push({\n        id: key,\n        title: data[key].title,\n        amount: data[key].amount,\n        date: new Date(data[key].date),\n      });\n    }\n\n    setExpenses(loadedExpenses);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  return (\n    <div>\n      <NewExpense onForm={fetchMoviesHandler} />\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}